name: Node.js CI/CD Pipeline

on:
  push: #An event that will trigger when code "Push" or "Pull" to the main
    branches: ["main"]
    
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  # Allows manual triggering
  schedule:
    - cron: '0 2 * * *'  # Runs daily at 2 AM UTC

jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]  # Run tests on multiple Node.js versions
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: app/package-lock.json

      - name: Install Dependencies
        run: npm ci
        working-directory: app
        
      - name: Run Tests
        run: npm test
        working-directory: app

  cd:
    name: Continuous Deployment
    needs: ci  # âœ… Only runs if CI passes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

      - name: Get Git Commit SHA
        id: version
        run: |
          TAG=${GITHUB_SHA::7}
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "Using commit SHA as tag: $TAG"
          
      - name: Build Multi-Architecture Docker Image
        run: |
          docker buildx create --use
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --tag uadeel421/nana-project:latest \
            --tag uadeel421/nana-project:${{ env.TAG }} \
            --push .

  # ðŸš€ New Step: Authenticate with Azure
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}  
      
      # ðŸš€ New Step: Set AKS Context
      - name: Set up AKS Credentials    
        run: az aks get-credentials --resource-group kprg --name kp_k8s_cluster --overwrite-existing

       # ðŸš€ New Step: Deploy to AKS
      - name: Deploy to AKS
        run: |
          kubectl set image deployment/webapp-deployment-staging webapp=uadeel421/nana-project:${{ env.TAG }} -n staging
          kubectl rollout status deployment/webapp-deployment-staging -n staging
